{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/pages/404.js","webpack:///./src/components/emoji.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["React","createContext","PropTypes","object","string","isRequired","func","__webpack_exports__","react_default","a","createElement","className","styles","container","secondaryContainer","header","gatsby_link_default","button","to","emoji","description","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","props","role","aria-label","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape"],"mappings":"6JAa2BA,IAAMC,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,oCCrDPC,EAAA,mBACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOC,WACrBL,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOE,oBACrBN,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOG,QAAtB,iCACAP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAME,UAAWC,IAAOK,OAAQC,GAAG,KAAnC,kBACiBV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOC,YAAY,2BAA2BD,MAAM,6CCX7E,IAAAE,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAIed,EAAA,WAAAkB,GAAK,OAClBF,EAAAd,EAAAC,cAAA,QAAMgB,KAAK,MAAMC,aAAYF,EAAML,aAAcK,EAAMN,6BCLzD,IAAsBS,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEpC,IAAMU,cAAc8B,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXV,EAAiBW,UAAY,CAC3BT,SAAUjC,IAAU2C,MAAM,CACxBN,SAAUrC,IAAUE,OAAOC,aAC1BA,YAGU4B","file":"component---src-pages-404-js-caaf189df189ea20a12e.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Emoji from \"../components/emoji\"\nimport styles from \"./404.module.css\"\n\nexport default () => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.secondaryContainer}>\n        <h1 className={styles.header}>Oops! Something went wrong...</h1>\n        <Link className={styles.button} to='/'>\n          Back to Safety <Emoji description=\"construction worker dude\" emoji=\"ðŸ‘·\" />\n        </Link>\n      </div>\n    </div>\n  );\n}\n","// React yells about wrapping emojis correctly so here we are\n\nimport React from \"react\"\n\nexport default props => (\n  <span role=\"img\" aria-label={props.description}>{props.emoji}</span>\n)","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}